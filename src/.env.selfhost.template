# Root environment variables for docker-compose.selfhost.yaml
# Copy this file to .env in the same directory (src/.env) and fill in the values.

# --- Client (Frontend) Variables ---
# The public-facing URL of your client application.
# [BUILD-TIME & RUNTIME] Crucial for OAuth redirects and server-side requests.
APP_BASE_URL=http://localhost:3000
NEXT_PUBLIC_APP_BASE_URL=http://localhost:3000

# The URL where the backend server will be accessible from the user's browser
# [BUILD-TIME & RUNTIME] Used by the client to make API calls.
NEXT_PUBLIC_APP_SERVER_URL=http://localhost:5000

# The internal URL for the backend server, used for server-to-server communication inside Docker.
# [BUILD-TIME & RUNTIME] Used by the client's Next.js server to talk to the backend server.
INTERNAL_APP_SERVER_URL=http://server:80

# The internal URL for the client container, used for server-side self-requests
# [BUILD-TIME & RUNTIME] Used for OAuth callbacks within the Docker network.
INTERNAL_CLIENT_URL=http://client:3000

# The mode to run the application in
# [BUILD-TIME & RUNTIME] Switches between Auth0 and self-host auth mode.
NEXT_PUBLIC_ENVIRONMENT=selfhost

# [BUILD-TIME & RUNTIME] A long, random, secret string. It must match SELF_HOST_AUTH_SECRET in server/.env.selfhost.template
SELF_HOST_AUTH_TOKEN=<generate_a_strong_secret_here>

# --- Server (Backend) Build-Time Variables ---
# [BUILD-TIME] Set OPENAI_API_KEY to "ollama" to install Ollama in the server container.
# Otherwise, provide your key for a remote service.
OPENAI_API_KEY=ollama
# [BUILD-TIME] The model to pull if Ollama is being installed. This should match the model in the server's Modelfile.
OPENAI_MODEL_NAME=qwen3:4b

# --- Gemini API Key (for Server - Memory MCP & optional LiteLLM) ---
# [RUNTIME] Required for memory embeddings and can be used for chat via LiteLLM.
GEMINI_API_KEY=<your-gemini-api-key>

# --- MongoDB Credentials (for Server) ---
MONGO_USER=test
MONGO_PASS=<generate_a_strong_password_for_mongo>

# --- PostgreSQL Credentials (for Server - Memory MCP) ---
POSTGRES_USER=sentient
POSTGRES_PASS=<generate_a_strong_password_for_postgres>
POSTGRES_DB=sentient_memory_db

# --- Redis Password (for Server - Celery) ---
REDIS_PASSWORD=<generate_a_strong_password_for_redis>

# --- WhatsApp (WAHA) Credentials (for WAHA Service) ---
# These are used by the WAHA container for WhatsApp integration.
WAHA_API_KEY=admin
WAHA_DASHBOARD_USERNAME=admin
WAHA_DASHBOARD_PASSWORD=admin