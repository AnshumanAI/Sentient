# src/docker-compose.databases.yaml
# This file should be deployed on your dedicated Database VM.
# You will need a .env file in the same directory with:
# REDIS_PASSWORD, POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB

services:
  redis:
    image: redis:7-alpine
    container_name: redis-db
    restart: unless-stopped
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    volumes:
      - redis-data:/data
    ports:
      # Expose Redis to the host machine so the Server VM can connect
      - "6379:6379"
    networks:
      - db_network
    env_file:
      - ./.env

  postgres:
    image: pgvector/pgvector:pg16
    container_name: sentient-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      # Expose PostgreSQL to the host machine
      - "5432:5432"
    networks:
      - db_network

  chroma:
    image: chromadb/chroma
    container_name: sentient-chroma-prod
    restart: unless-stopped
    ports:
      # Expose Chroma to the host machine on port 8002
      - "8002:8000"
    volumes:
      - chroma-data:/chroma/.chroma/index
    networks:
      - db_network

networks:
  db_network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  chroma-data: